package com.test.aug27.service;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import java.util.Scanner;

import com.test.aug27.exceptions.InvalidNameException;
import com.test.aug27.exceptions.PlayerValidator;
import com.test.aug27.exceptions.ValidNameException;
import com.test.aug27.pojo.Player;

class NameComparator implements Comparator<String> {

	@Override
	public int compare(String o1, String o2) {
		// TODO Auto-generated method stub
		return o1.compareToIgnoreCase(o2);
	}
	
}

public class TeamSelection {
	
//	int id;
//	String name;
//	int matchesPlayed;
//	int totRuns;
//	int highestScore;
//	int wktsTaken;
//	int outOnZero;
//	String type;
//	double avgScore;
	
	public static List<Player> playerList = new ArrayList<>();
	public static Scanner sc = new Scanner(System.in);
	public static PlayerValidator pv = new PlayerValidator();
	public static Random rand = new Random();
	
	static int count = 20;
	int bowlerCount = 0;
	int wktKeeper = 0;
	
	public static boolean validateName(String name) {
		Iterator<Player> itr = playerList.iterator();
		boolean ret = true;

		while(itr.hasNext()) {
			Player pl = itr.next();
			try {
//				uv.checkUserName(r.getUserName(), rx.getUserName());
				pv.checkName(name, pl.getName());
			} catch (InvalidNameException e) {
				System.out.println("Player already exists!!");
				ret = false;
				break;
			} catch (ValidNameException e) {
				
			}
		}
		return ret;
	}
	
	public void getPlayerList() {
		System.out.println("\nEnter details of 20 players: ");
		int  i = 0;
		while(i < 20) {
			int id = i+1;
			
			String name;
			while(true) {
				System.out.println("Enter name: ");
				name = sc.next();
				if(validateName(name))
					break;
			}
			
			System.out.println("Enter no. of matches played: ");
			int matchesPlayed = sc.nextInt();
			
			System.out.println("Enter total runs scored: ");
			int totRuns = sc.nextInt();
			
			System.out.println("Enter highest score: ");
			int highestScore = sc.nextInt();
			
			System.out.println("Enter no. of wickets taken: ");
			int wktsTaken = sc.nextInt();
			
			System.out.println("Enter no. of matched ducked out: ");
			int outOnZero = sc.nextInt();
			
			System.out.println("Enter the player type (batsman/bowler/wicketKeeper/allRounder): ");
			String type = sc.next();
			if(type.equalsIgnoreCase("bowler"))
				bowlerCount++;
			else if(type.equalsIgnoreCase("wicketKeeper")) {
				if(wktKeeper == 1) {
					System.out.println("Limit reached for wicket keeper!");
					continue;
				} else {
					wktKeeper = 1;
				}
			}
			
			double avgScore = totRuns/matchesPlayed;
			
			playerList.add(new Player(id, name, matchesPlayed, totRuns, highestScore, wktsTaken, outOnZero, type, avgScore));
			
			++i;
		}
	}
	
	public boolean checkBowlers() {
		boolean ret = false;
		if(bowlerCount >= 3)
			ret = true;
		return ret;
	}
	
	public ArrayList<Player> teamFormation(int bowlerNum) {
		if(bowlerNum > bowlerCount) {
			System.out.println("Insufficient number of bowlers!");
			return null;
		}
		
			
		
		
		return null;
	}

	public static void main(String[] args) {
		
		

	}

}
